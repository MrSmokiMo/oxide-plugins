using System.Collections.Generic;

namespace Oxide.Plugins
{
    [Info("NoSuicide", "Wulf/lukespragg", "0.1.3")]
    [Description("Stops players from suiciding/killing themselves")]

    class NoSuicide : CovalencePlugin
    {
        // Do NOT edit this file, instead edit NoSuicide.en.json in oxide/lang,
        // or create a language file for another language using the 'en' file as a default.

        #region Initialization

        const string permExcluded = "nosuicide.excluded";

        void Loaded()
        {
            #if !HURTWORLD && !RUST
            throw new NotSupportedException("This plugin does not support this game");
            #endif

            permission.RegisterPermission(permExcluded, this);
            lang.RegisterMessages(new Dictionary<string, string> { ["NotAllowed"] = "Sorry, suicide is not an option!" }, this);
        }

        #endregion

        #region Suicide Handling

        bool CanSuicide(string id)
        {
            if (HasPermission(id, permExcluded)) return true;

            var player = players.GetConnectedPlayer(id);
            player?.Message(Lang("NotAllowed", id));
            return false;
        }

        #if HURTWORLD
        object OnPlayerSuicide(PlayerSession session) => CanSuicide(session.SteamId.ToString()) ? (object)null : true;
        #endif

        #if RUST
        object OnServerCommand(ConsoleSystem.Arg arg) => arg.cmd?.name != "kill" || CanSuicide(arg.connection?.userid.ToString()) ? (object)null : true;
        #endif

        #endregion

        #region Helpers

        string Lang(string key, string id = null, params object[] args) => string.Format(lang.GetMessage(key, this, id), args);

        bool HasPermission(string id, string perm) => permission.UserHasPermission(id, perm);

        #endregion
    }
}
