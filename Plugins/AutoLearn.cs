/*
TODO:
- Add permissions support
- Add command to learn all blueprints? (BlueprintManager already does this)
- Fix default blueprints erroring config
*/

using System;
using System.Linq;

namespace Oxide.Plugins
{
    [Info("AutoLearn", "Wulf/lukespragg", "1.0.6", ResourceId = 1056)]
    [Description("Enables players to automatically learn blueprints when they join.")]

    class AutoLearn : RustPlugin
    {
        // Do NOT edit this file, instead edit AutoLearn.json in server/<identity>/oxide/config

        #region Configuration

        // Messages
        string ChatCommand => GetConfig("ChatCommand", "bpsupdate");
        string ConsoleCommand => GetConfig("ConsoleCommand", "bpsupdate");
        string HaveLearned => GetConfig("HaveLearned", "You have learned the {item} blueprint automatically!");

        // Settings
        string[] Blueprints => GetConfig("Blueprints", new[] { "lock.code", "" }); // TODO: Fix this

        protected override void LoadDefaultConfig()
        {
            // Messages
            Config["ChatCommand"] = ChatCommand;
            Config["ConsoleCommand"] = ConsoleCommand;
            Config["HaveLearned"] = HaveLearned;

            // Settings
            Config["Blueprints"] = Blueprints;

            SaveConfig();
        }

        #endregion

        void Loaded()
        {
            LoadDefaultConfig();

            permission.RegisterPermission("autolearn.update", this);
            cmd.AddChatCommand(ChatCommand, this, "BpsChatCmd");
            cmd.AddConsoleCommand("global" + ConsoleCommand, this, "BpsConsoleCmd");
        }

        #region Learn Blueprints

        void LearnBlueprints(BasePlayer player)
        {
            var blueprints = ItemManager.bpList.Where(bp => Blueprints.Contains(bp.targetItem.shortname)).ToList();
            foreach (var bp in blueprints.Where(bp => !player.blueprints.CanCraft(bp.targetItem.itemid, 0)))
            {
                player.blueprints.Learn(bp.targetItem);
                PrintToChat(player, string.Format(HaveLearned, bp.targetItem.displayName.translated));
            }
        }

        void OnPlayerInit(BasePlayer player) => LearnBlueprints(player);

        #endregion

        #region Chat Command

        void BpsChatCmd(BasePlayer player)
        {
            if (!HasPermission(player, "autolearn.update")) return;
            foreach (var target in BasePlayer.activePlayerList) LearnBlueprints(target);
        }

        #endregion

        #region Console Command

        void BpsConsoleCmd(ConsoleSystem.Arg arg)
        {
            var player = arg?.connection?.player as BasePlayer;
            if (!HasPermission(player, "autolearn.update")) return;
            foreach (var target in BasePlayer.activePlayerList) LearnBlueprints(target);
        }

        #endregion

        #region Helper Methods

        T GetConfig<T>(string name, T defaultValue)
        {
            if (Config[name] == null) return defaultValue;
            return (T)Convert.ChangeType(Config[name], typeof(T));
        }

        bool HasPermission(BasePlayer player, string perm) => permission.UserHasPermission(player.UserIDString, perm);

        #endregion
    }
}
